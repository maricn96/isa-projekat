{"ast":null,"code":"import axios from 'axios';\nexport var getAllBonusPointsDiscounts = function getAllBonusPointsDiscounts() {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8095/api/purchases/bonusPoitsDiscounts/all').then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_BONUS_POINTS_DISCOUNTS',\n        bonusPointsDiscounts: res.data\n      });\n    });\n  };\n};\nexport var getUserShoppingCart = function getUserShoppingCart(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8095/api/purchases/shoppingCart/user/' + id).then(function (res) {\n      //nakon sto smo dobili korpu, moramo da ucitamo i rezervacije koje ona ima..\n      console.log(res.data);\n      dispatch(getCarReservation(res.data.carReservationId));\n      dispatch({\n        type: 'GET_USER_SHOPPING_CART',\n        userShoppingCart: res.data\n      });\n    });\n  };\n};\nexport var getCarReservation = function getCarReservation(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/reservation/' + id).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_CAR_RESERVATION',\n        carReservation: res.data\n      });\n    });\n  };\n};\nexport var createUserShoppingCart = function createUserShoppingCart(userId) {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8095/api/purchases/shoppingCart/', {\n      id: -1,\n      bonusPoints: 0,\n      userId: userId,\n      carReservationId: null,\n      roomReservationId: null,\n      price: 0\n    }).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'CREATE_USER_SHOPPING_CART',\n        userShoppingCart: res.data\n      });\n    });\n  };\n};\nexport var addRentACarReservationToShoppingCart = function addRentACarReservationToShoppingCart(idKorpe, dateFrom, dateTo, car) {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8095/api/purchases/shoppingCart/addCarReservation/' + id, {\n      id: -1,\n      dateFrom: dateFrom,\n      dateTo: dateTo,\n      rating: 0,\n      carRating: 0,\n      reservedCar: {\n        id: car.id,\n        rentPrice: car.rentPrice,\n        carType: {\n          id: car.carType.id,\n          numberOfSeats: '',\n          modelYear: '',\n          model: '',\n          brand: '',\n          carType: ''\n        },\n        rentService: {\n          id: car.rentService.id,\n          name: '',\n          adress: '',\n          description: ''\n        },\n        branchOffice: {\n          id: car.branchOffice.id,\n          name: '',\n          adress: '',\n          city: '',\n          rentServiceDTO: {\n            id: car.rentService.id,\n            adress: '',\n            name: '',\n            description: ''\n          }\n        }\n      },\n      branchOfficeFrom: {\n        id: car.branchOffice.id,\n        name: '',\n        adress: '',\n        city: '',\n        rentServiceDTO: {\n          id: car.rentService.id,\n          adress: '',\n          name: '',\n          description: ''\n        }\n      },\n      branchOfficeTo: {\n        id: car.branchOffice.id,\n        name: '',\n        adress: '',\n        city: '',\n        rentServiceDTO: {\n          id: car.rentService.id,\n          adress: '',\n          name: '',\n          description: ''\n        }\n      },\n      service: {\n        id: car.rentService.id,\n        adress: '',\n        name: '',\n        description: ''\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'CREATE_USER_SHOPPING_CART',\n        userShoppingCart: res.data\n      });\n    });\n  };\n};\nexport var makeReservation = function makeReservation(id) {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8095/api/purchases/shoppingCart/' + id).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'MAKE_RESERVATION',\n        finalReservation: res.data\n      });\n    });\n  };\n};\nexport var getAllUserReservations = function getAllUserReservations(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8095/api/purchases/reservation/allByUser/' + id).then(function (res) {\n      console.log(res.data);\n      res.data.map(function (reservation) {\n        return dispatch(addRentCarReservationToCollection(reservation.carReservationId));\n      });\n      dispatch({\n        type: 'GET_USER_RESERVATIONS',\n        userReservations: res.data\n      });\n    });\n  };\n};\nexport var addRentCarReservationToCollection = function addRentCarReservationToCollection(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/reservation/' + id).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_USER_RENT_A_CAR_RESERVATIONS',\n        rentCarReservations: res.data\n      });\n    });\n  };\n};\nexport var createBonusPointsDiscount = function createBonusPointsDiscount(bonusPointsDiscount) {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8095/api/purchases/bonusPoitsDiscounts/', {\n      id: bonusPointsDiscount.id,\n      points: bonusPointsDiscount.points,\n      discount: bonusPointsDiscount.discount\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'CREATE_BONUS_POINTS_DISCOUNT',\n        bonusPointsDiscount: res.data\n      });\n    });\n  };\n};\nexport var editBonusPointsDiscount = function editBonusPointsDiscount(id, bonusPointsDiscount) {\n  return function (dispatch, getState) {\n    axios.put('http://localhost:8095/api/purchases/bonusPoitsDiscounts/' + id, {\n      id: bonusPointsDiscount.id,\n      points: bonusPointsDiscount.points,\n      discount: bonusPointsDiscount.discount\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'UPDATE_BONUS_POINTS_DISCOUNT',\n        editedDiscount: res.data\n      });\n    });\n  };\n};\nexport var deleteBonusPointsDiscount = function deleteBonusPointsDiscount(id) {\n  return function (dispatch, getState) {\n    axios.delete('http://localhost:8095/api/purchases/bonusPoitsDiscounts/' + id).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'DELETE_BONUS_POINTS_DISCOUNT',\n        deletedDiscount: res.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\7.SEMESTAR\\ISA\\projekat\\ISA-project\\ISA-project\\isa-front\\src\\store\\actions\\PurchasesActions.js"],"names":["axios","getAllBonusPointsDiscounts","dispatch","getState","get","then","res","console","log","data","type","bonusPointsDiscounts","getUserShoppingCart","id","getCarReservation","carReservationId","userShoppingCart","carReservation","createUserShoppingCart","userId","post","bonusPoints","roomReservationId","price","addRentACarReservationToShoppingCart","idKorpe","dateFrom","dateTo","car","rating","carRating","reservedCar","rentPrice","carType","numberOfSeats","modelYear","model","brand","rentService","name","adress","description","branchOffice","city","rentServiceDTO","branchOfficeFrom","branchOfficeTo","service","makeReservation","finalReservation","getAllUserReservations","map","reservation","addRentCarReservationToCollection","userReservations","rentCarReservations","createBonusPointsDiscount","bonusPointsDiscount","points","discount","editBonusPointsDiscount","put","editedDiscount","deleteBonusPointsDiscount","delete","deletedDiscount"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nexport const getAllBonusPointsDiscounts = () => {\r\n\r\n    return (dispatch, getState) => {\r\n        axios.get('http://localhost:8095/api/purchases/bonusPoitsDiscounts/all')\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_BONUS_POINTS_DISCOUNTS', bonusPointsDiscounts: res.data })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const getUserShoppingCart = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        axios.get('http://localhost:8095/api/purchases/shoppingCart/user/' + id)\r\n            .then(res => {\r\n                //nakon sto smo dobili korpu, moramo da ucitamo i rezervacije koje ona ima..\r\n                console.log(res.data)\r\n                dispatch(getCarReservation(res.data.carReservationId));\r\n                dispatch({ type: 'GET_USER_SHOPPING_CART', userShoppingCart: res.data })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const getCarReservation = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/reservation/' + id)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                dispatch({ type: 'GET_CAR_RESERVATION', carReservation: res.data })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const createUserShoppingCart = (userId) => {\r\n\r\n    return (dispatch, getState) => {\r\n        axios.post('http://localhost:8095/api/purchases/shoppingCart/', { id: -1, bonusPoints: 0, userId: userId, carReservationId: null, roomReservationId: null, price: 0 })\r\n            .then(res => {\r\n                console.log(res.data)\r\n                dispatch({ type: 'CREATE_USER_SHOPPING_CART', userShoppingCart: res.data })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const addRentACarReservationToShoppingCart = (idKorpe, dateFrom, dateTo, car) => {\r\n\r\n    return (dispatch, getState) => {\r\n        axios.post('http://localhost:8095/api/purchases/shoppingCart/addCarReservation/' + id, { id: -1, dateFrom: dateFrom, dateTo: dateTo, rating: 0, carRating: 0, reservedCar: { id: car.id, rentPrice: car.rentPrice, carType: { id: car.carType.id, numberOfSeats: '', modelYear: '', model: '', brand: '', carType: '' }, rentService: { id: car.rentService.id, name: '', adress: '', description: '' }, branchOffice: { id: car.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: car.rentService.id, adress: '', name: '', description: '' } } }, branchOfficeFrom: { id: car.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: car.rentService.id, adress: '', name: '', description: '' } }, branchOfficeTo: { id: car.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: car.rentService.id, adress: '', name: '', description: '' } }, service: { id: car.rentService.id, adress: '', name: '', description: '' } })\r\n            .then(res => {\r\n                console.log(res.data)\r\n                dispatch({ type: 'CREATE_USER_SHOPPING_CART', userShoppingCart: res.data })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const makeReservation = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        axios.post('http://localhost:8095/api/purchases/shoppingCart/' + id)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                dispatch({ type: 'MAKE_RESERVATION', finalReservation: res.data })\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getAllUserReservations = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        axios.get('http://localhost:8095/api/purchases/reservation/allByUser/' + id)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                res.data.map(reservation => {\r\n                    return (dispatch(addRentCarReservationToCollection(reservation.carReservationId)));\r\n                })\r\n\r\n                dispatch({ type: 'GET_USER_RESERVATIONS', userReservations: res.data })\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const addRentCarReservationToCollection = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        axios.get('http://localhost:8090/api/rentacar/reservation/' + id)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                dispatch({ type: 'GET_USER_RENT_A_CAR_RESERVATIONS', rentCarReservations: res.data })\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const createBonusPointsDiscount = (bonusPointsDiscount) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.post('http://localhost:8095/api/purchases/bonusPoitsDiscounts/', { id: bonusPointsDiscount.id, points: bonusPointsDiscount.points, discount: bonusPointsDiscount.discount })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'CREATE_BONUS_POINTS_DISCOUNT', bonusPointsDiscount: res.data });\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const editBonusPointsDiscount = (id, bonusPointsDiscount) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.put('http://localhost:8095/api/purchases/bonusPoitsDiscounts/' + id, { id: bonusPointsDiscount.id, points: bonusPointsDiscount.points, discount: bonusPointsDiscount.discount })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'UPDATE_BONUS_POINTS_DISCOUNT', editedDiscount: res.data });\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteBonusPointsDiscount = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.delete('http://localhost:8095/api/purchases/bonusPoitsDiscounts/' + id)\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'DELETE_BONUS_POINTS_DISCOUNT', deletedDiscount: res.data });\r\n            })\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}