{"ast":null,"code":"import axios from 'axios';\nimport { bindActionCreators } from '../../../../../../../AppData/Local/Microsoft/TypeScript/3.2/node_modules/redux';\nexport var getUser = function getUser(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8096/api/user/user/' + id).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'GET_USER',\n        user: res.data\n      });\n    });\n  };\n};\nexport var getUserFriendRequests = function getUserFriendRequests(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8096/api/user/user/friendRequest/' + id).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'GET_ALL_USERS_FRIEND_REQUESTS',\n        friendRequests: res.data\n      });\n    });\n  };\n};\nexport var getUserFriends = function getUserFriends(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8096/api/user/user/friends/' + id).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'GET_ALL_USER_FRIENDS',\n        friends: res.data\n      });\n    });\n  };\n};\nexport var updateUser = function updateUser(id, user) {\n  return function (dispatch, getState) {\n    axios.put('http://localhost:8096/api/user/user/' + id, {\n      id: user.id,\n      name: user.name,\n      surname: user.surname,\n      city: user.city,\n      email: user.email,\n      telephoneNumber: user.telephoneNumber,\n      passport: user.passport\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'USER_CHANGES_HIS_ATRIBUTES',\n        user: res.data\n      });\n    });\n  };\n};\nexport var logInUser = function logInUser(email, password) {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8096/api/user/user/login', {\n      email: email,\n      password: password\n    }).then(function (res) {\n      console.log(res);\n      localStorage.setItem('user', JSON.stringify(res.data));\n      window.location = '/';\n      dispatch({\n        type: 'LOG_IN_USER',\n        user: res.data\n      });\n    });\n  };\n};\nexport var loadUserAfterRefresh = function loadUserAfterRefresh(user) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: 'LOAD_USER_AFTER_REFRESH',\n      user: user\n    });\n  };\n};\nexport var logOutUser = function logOutUser() {\n  return function (dispatch, getState) {\n    localStorage.setItem('user', undefined);\n    window.location = '/';\n    dispatch({\n      type: 'LOG_OUT_USER',\n      user: undefined\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Korisnik\\Desktop\\ISA_Project\\ISA-project\\isa-front\\src\\store\\actions\\UserActions.js"],"names":["axios","bindActionCreators","getUser","id","dispatch","getState","get","then","res","console","log","type","user","data","getUserFriendRequests","friendRequests","getUserFriends","friends","updateUser","put","name","surname","city","email","telephoneNumber","passport","logInUser","password","post","localStorage","setItem","JSON","stringify","window","location","loadUserAfterRefresh","logOutUser","undefined"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,gFAAnC;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAQ;AAE3B,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAE3BL,IAAAA,KAAK,CAACM,GAAN,CAAU,yCAAyCH,EAAnD,EACKI,IADL,CACU,UAAAC,GAAG,EAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,IAAI,EAAEJ,GAAG,CAACK;AAA9B,OAAD,CAAR;AACH,KAJL;AAMH,GARD;AAUH,CAZM;AAcP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACX,EAAD,EAAQ;AAEzC,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAE3BL,IAAAA,KAAK,CAACM,GAAN,CAAU,uDAAuDH,EAAjE,EACKI,IADL,CACU,UAAAC,GAAG,EAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,+BAAR;AAAyCI,QAAAA,cAAc,EAAEP,GAAG,CAACK;AAA7D,OAAD,CAAR;AACH,KAJL;AAKH,GAPD;AAQH,CAVM;AAYP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACb,EAAD,EAAQ;AAElC,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3BL,IAAAA,KAAK,CAACM,GAAN,CAAU,iDAAiDH,EAA3D,EACKI,IADL,CACU,UAAAC,GAAG,EAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,sBAAR;AAAgCM,QAAAA,OAAO,EAAET,GAAG,CAACK;AAA7C,OAAD,CAAR;AACH,KAJL;AAKH,GAND;AAOH,CATM;AAWP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACf,EAAD,EAAKS,IAAL,EAAc;AAEpC,SAAO,UAACR,QAAD,EAAWC,QAAX,EAAwB;AAE3BL,IAAAA,KAAK,CAACmB,GAAN,CAAU,yCAAyChB,EAAnD,EAAuD;AAAEA,MAAAA,EAAE,EAAES,IAAI,CAACT,EAAX;AAAeiB,MAAAA,IAAI,EAAER,IAAI,CAACQ,IAA1B;AAAgCC,MAAAA,OAAO,EAAET,IAAI,CAACS,OAA9C;AAAuDC,MAAAA,IAAI,EAAEV,IAAI,CAACU,IAAlE;AAAwEC,MAAAA,KAAK,EAAEX,IAAI,CAACW,KAApF;AAA2FC,MAAAA,eAAe,EAAEZ,IAAI,CAACY,eAAjH;AAAkIC,MAAAA,QAAQ,EAAEb,IAAI,CAACa;AAAjJ,KAAvD,EACKlB,IADL,CACU,UAAAC,GAAG,EAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,4BAAR;AAAsCC,QAAAA,IAAI,EAAEJ,GAAG,CAACK;AAAhD,OAAD,CAAR;AACH,KAJL;AAMH,GARD;AAUH,CAZM;AAeP,OAAO,IAAMa,SAAS,GAAG,SAAZA,SAAY,CAACH,KAAD,EAAQI,QAAR,EAAqB;AAE1C,SAAO,UAACvB,QAAD,EAAWC,QAAX,EAAwB;AAE3BL,IAAAA,KAAK,CAAC4B,IAAN,CAAW,2CAAX,EAAwD;AAAEL,MAAAA,KAAK,EAAEA,KAAT;AAAgBI,MAAAA,QAAQ,EAAEA;AAA1B,KAAxD,EACKpB,IADL,CACU,UAAAC,GAAG,EAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAqB,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAexB,GAAG,CAACK,IAAnB,CAA7B;AACAoB,MAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACA9B,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,IAAI,EAAEJ,GAAG,CAACK;AAAjC,OAAD,CAAR;AACH,KANL;AAQH,GAVD;AAYH,CAdM;AAgBP,OAAO,IAAMsB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACvB,IAAD,EAAU;AAE1C,SAAO,UAACR,QAAD,EAAWC,QAAX,EAAwB;AAC3BD,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,yBAAR;AAAmCC,MAAAA,IAAI,EAAEA;AAAzC,KAAD,CAAR;AACH,GAFD;AAIH,CANM;AASP,OAAO,IAAMwB,UAAU,GAAG,SAAbA,UAAa,GAAM;AAE5B,SAAO,UAAChC,QAAD,EAAWC,QAAX,EAAwB;AAG3BwB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BO,SAA7B;AACAJ,IAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACA9B,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,IAAI,EAAEyB;AAA9B,KAAD,CAAR;AAGH,GARD;AAUH,CAZM","sourcesContent":["import axios from 'axios'\r\nimport { bindActionCreators } from '../../../../../../../AppData/Local/Microsoft/TypeScript/3.2/node_modules/redux';\r\n\r\nexport const getUser = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8096/api/user/user/' + id)\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'GET_USER', user: res.data });\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getUserFriendRequests = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8096/api/user/user/friendRequest/' + id)\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'GET_ALL_USERS_FRIEND_REQUESTS', friendRequests: res.data });\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserFriends = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        axios.get('http://localhost:8096/api/user/user/friends/' + id)\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'GET_ALL_USER_FRIENDS', friends: res.data });\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateUser = (id, user) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.put('http://localhost:8096/api/user/user/' + id, { id: user.id, name: user.name, surname: user.surname, city: user.city, email: user.email, telephoneNumber: user.telephoneNumber, passport: user.passport })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'USER_CHANGES_HIS_ATRIBUTES', user: res.data });\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const logInUser = (email, password) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.post('http://localhost:8096/api/user/user/login', { email: email, password: password })\r\n            .then(res => {\r\n                console.log(res);\r\n                localStorage.setItem('user', JSON.stringify(res.data))\r\n                window.location = '/'\r\n                dispatch({ type: 'LOG_IN_USER', user: res.data });\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const loadUserAfterRefresh = (user) => {\r\n\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: 'LOAD_USER_AFTER_REFRESH', user: user });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const logOutUser = () => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n\r\n        localStorage.setItem('user', undefined)\r\n        window.location = '/'\r\n        dispatch({ type: 'LOG_OUT_USER', user: undefined });\r\n\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}