{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT\\\\ISA-project\\\\isa-front\\\\src\\\\components\\\\dashboard\\\\rentACarAdmin\\\\DashboardRentACarAdminLogged.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport RentACarAdminTabs from \"../../layout/tabs/RentACarAdminTabs\";\nimport AdminRentServiceInfo from \"./AdminRentServiceInfo\";\nimport CarManipulation from \"./CarManipulation\";\nimport CarDiscountManipulation from \"./CarDiscountsManipulation\";\nimport { getOneRentService as _getOneRentService, getAllBranchOfficesByRentId as _getAllBranchOfficesByRentId, getAllCarsByRentId as _getAllCarsByRentId, getAllCarTypes as _getAllCarTypes, getAllCarDiscountsByRentId as _getAllCarDiscountsByRentId } from \"../../../store/actions/RentACarActions\";\nimport { connect } from \"react-redux\";\nimport RentACarStatistic from \"./RentACarStatistic\";\n\nvar DashboardRentACarAdminLogged =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DashboardRentACarAdminLogged, _Component);\n\n  function DashboardRentACarAdminLogged() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DashboardRentACarAdminLogged);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DashboardRentACarAdminLogged)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      otvoriProzorZaDodavanje: false\n    };\n\n    _this.componentDidMount = function () {\n      var user = JSON.parse(localStorage.getItem('user'));\n\n      if (user) {\n        _this.props.loadUserAfterRefresh(user);\n\n        _this.props.getOneRentService(2);\n\n        _this.props.getAllBranchOfficesByRentId(2);\n\n        _this.props.getAllCarsByRentId(2);\n\n        _this.props.getAllCarTypes();\n\n        _this.props.getAllCarDiscountsByRentId(2);\n      }\n    };\n\n    _this.prikaziCardZaDodavanje = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        otvoriProzorZaDodavanje: true\n      });\n    };\n\n    _this.iskljuciCardZaDodavanje = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        otvoriProzorZaDodavanje: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DashboardRentACarAdminLogged, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        component: RentACarAdminTabs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/rentAdminRentService\",\n        render: function render(props) {\n          return React.createElement(AdminRentServiceInfo, {\n            otvoriProzor: _this2.state.otvoriProzorZaDodavanje,\n            prikaziCardZaDodavanje: _this2.prikaziCardZaDodavanje,\n            iskljuciCardZaDodavanje: _this2.iskljuciCardZaDodavanje,\n            rentACarService: _this2.props.rentACarService,\n            branchOffices: _this2.props.branchOffices,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/rentAdminCars\",\n        render: function render(props) {\n          return React.createElement(CarManipulation, {\n            rentACarService: _this2.props.rentACarService,\n            otvoriProzor: _this2.state.otvoriProzorZaDodavanje,\n            prikaziCardZaDodavanje: _this2.prikaziCardZaDodavanje,\n            iskljuciCardZaDodavanje: _this2.iskljuciCardZaDodavanje,\n            cars: _this2.props.cars,\n            carTypes: _this2.props.carTypes,\n            branchOffices: _this2.props.branchOffices,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/rentAdminDiscounts\",\n        render: function render(props) {\n          return React.createElement(CarDiscountManipulation, {\n            otvoriProzor: _this2.state.otvoriProzorZaDodavanje,\n            prikaziCardZaDodavanje: _this2.prikaziCardZaDodavanje,\n            iskljuciCardZaDodavanje: _this2.iskljuciCardZaDodavanje,\n            carDiscounts: _this2.props.carDiscounts,\n            cars: _this2.props.cars,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/rentACarStatistic\",\n        render: function render(props) {\n          return React.createElement(RentACarStatistic, {\n            rentServiceId: _this2.props.rentACarService.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return DashboardRentACarAdminLogged;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    rentACarService: state.rentACar.rentService,\n    branchOffices: state.rentACar.branchOffices,\n    cars: state.rentACar.cars,\n    carTypes: state.rentACar.carTypes,\n    carDiscounts: state.rentACar.carDiscounts,\n    rentServiceId: state.rentACar.rentACarServiceId\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getOneRentService: function getOneRentService(id) {\n      return dispatch(_getOneRentService(id));\n    },\n    getAllBranchOfficesByRentId: function getAllBranchOfficesByRentId(id) {\n      return dispatch(_getAllBranchOfficesByRentId(id));\n    },\n    getAllCarsByRentId: function getAllCarsByRentId(id) {\n      return dispatch(_getAllCarsByRentId(id));\n    },\n    getAllCarTypes: function getAllCarTypes() {\n      return dispatch(_getAllCarTypes());\n    },\n    getAllCarDiscountsByRentId: function getAllCarDiscountsByRentId(id) {\n      return dispatch(_getAllCarDiscountsByRentId(id));\n    },\n    getRentACarServiceId: function (_getRentACarServiceId) {\n      function getRentACarServiceId(_x) {\n        return _getRentACarServiceId.apply(this, arguments);\n      }\n\n      getRentACarServiceId.toString = function () {\n        return _getRentACarServiceId.toString();\n      };\n\n      return getRentACarServiceId;\n    }(function (userId) {\n      return dispatch(getRentACarServiceId(userId));\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardRentACarAdminLogged);","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\ISA_PROJEKAT\\ISA-project\\isa-front\\src\\components\\dashboard\\rentACarAdmin\\DashboardRentACarAdminLogged.js"],"names":["React","Component","BrowserRouter","Route","RentACarAdminTabs","AdminRentServiceInfo","CarManipulation","CarDiscountManipulation","getOneRentService","getAllBranchOfficesByRentId","getAllCarsByRentId","getAllCarTypes","getAllCarDiscountsByRentId","connect","RentACarStatistic","DashboardRentACarAdminLogged","state","otvoriProzorZaDodavanje","componentDidMount","user","JSON","parse","localStorage","getItem","props","loadUserAfterRefresh","prikaziCardZaDodavanje","e","preventDefault","setState","iskljuciCardZaDodavanje","rentACarService","branchOffices","cars","carTypes","carDiscounts","id","mapStateToProps","rentACar","rentService","rentServiceId","rentACarServiceId","mapDispatchToProps","dispatch","getRentACarServiceId","userId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { BrowserRouter, Route } from \"react-router-dom\"\r\nimport RentACarAdminTabs from \"../../layout/tabs/RentACarAdminTabs\";\r\nimport AdminRentServiceInfo from \"./AdminRentServiceInfo\";\r\nimport CarManipulation from \"./CarManipulation\";\r\nimport CarDiscountManipulation from \"./CarDiscountsManipulation\";\r\nimport { getOneRentService, getAllBranchOfficesByRentId, getAllCarsByRentId, getAllCarTypes, getAllCarDiscountsByRentId } from \"../../../store/actions/RentACarActions\"\r\n\r\nimport { connect } from \"react-redux\"\r\nimport RentACarStatistic from \"./RentACarStatistic\";\r\n\r\nclass DashboardRentACarAdminLogged extends Component {\r\n\r\n    state = {\r\n        otvoriProzorZaDodavanje: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            this.props.loadUserAfterRefresh(user);\r\n\r\n            this.props.getOneRentService(2);\r\n            this.props.getAllBranchOfficesByRentId(2);\r\n            this.props.getAllCarsByRentId(2);\r\n            this.props.getAllCarTypes();\r\n            this.props.getAllCarDiscountsByRentId(2);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    prikaziCardZaDodavanje = (e) => {\r\n\r\n        e.preventDefault();\r\n        this.setState({\r\n            otvoriProzorZaDodavanje: true\r\n        })\r\n\r\n    }\r\n\r\n    iskljuciCardZaDodavanje = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            otvoriProzorZaDodavanje: false\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <BrowserRouter>\r\n                    <div >\r\n                        <div>\r\n                            <Route path=\"/\" component={RentACarAdminTabs}></Route>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <Route path=\"/rentAdminRentService\" render={(props) => <AdminRentServiceInfo otvoriProzor={this.state.otvoriProzorZaDodavanje} prikaziCardZaDodavanje={this.prikaziCardZaDodavanje} iskljuciCardZaDodavanje={this.iskljuciCardZaDodavanje} rentACarService={this.props.rentACarService} branchOffices={this.props.branchOffices} />} />\r\n                            <Route path=\"/rentAdminCars\" render={(props) => <CarManipulation rentACarService={this.props.rentACarService} otvoriProzor={this.state.otvoriProzorZaDodavanje} prikaziCardZaDodavanje={this.prikaziCardZaDodavanje} iskljuciCardZaDodavanje={this.iskljuciCardZaDodavanje} cars={this.props.cars} carTypes={this.props.carTypes} branchOffices={this.props.branchOffices} />} ></Route>\r\n                            <Route path=\"/rentAdminDiscounts\" render={(props) => <CarDiscountManipulation otvoriProzor={this.state.otvoriProzorZaDodavanje} prikaziCardZaDodavanje={this.prikaziCardZaDodavanje} iskljuciCardZaDodavanje={this.iskljuciCardZaDodavanje} carDiscounts={this.props.carDiscounts} cars={this.props.cars} />}></Route>\r\n                            <Route path=\"/rentACarStatistic\" render={(props) => <RentACarStatistic rentServiceId={this.props.rentACarService.id} />} />\r\n                        </div>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        rentACarService: state.rentACar.rentService,\r\n        branchOffices: state.rentACar.branchOffices,\r\n        cars: state.rentACar.cars,\r\n        carTypes: state.rentACar.carTypes,\r\n        carDiscounts: state.rentACar.carDiscounts,\r\n        rentServiceId: state.rentACar.rentACarServiceId\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getOneRentService: (id) => dispatch(getOneRentService(id)),\r\n        getAllBranchOfficesByRentId: (id) => dispatch(getAllBranchOfficesByRentId(id)),\r\n        getAllCarsByRentId: (id) => dispatch(getAllCarsByRentId(id)),\r\n        getAllCarTypes: () => dispatch(getAllCarTypes()),\r\n        getAllCarDiscountsByRentId: (id) => dispatch(getAllCarDiscountsByRentId(id)),\r\n        getRentACarServiceId: (userId) => dispatch(getRentACarServiceId(userId))\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardRentACarAdminLogged);"]},"metadata":{},"sourceType":"module"}